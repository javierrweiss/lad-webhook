{;; ---------------------------------------------------------
 :paths
 ["src" "resources"]
 ;; ---------------------------------------------------------

 ;; ---------------------------------------------------------
 :deps
 {;; Service
  http-kit/http-kit  {:mvn/version "2.8.0"}
  metosin/reitit     {:mvn/version "0.7.1"}
  metosin/reitit-dev {:mvn/version "0.7.1"} ; human readable exceptions
  ;; Logging
  ;; create events and send to publisher
  com.brunobonacci/mulog             {:mvn/version "0.9.0"}
  ;; JSON Console out support
  com.brunobonacci/mulog-adv-console {:mvn/version "0.9.0"}
  ;; Optional: suppress slf4j warning 
  org.slf4j/slf4j-nop {:mvn/version "1.7.32"}
  ;; Drivers
  RelJDBC/jar {:local/root "resources/RelJDBC.jar"}
  org.postgresql/postgresql {:mvn/version "42.7.3"}
  com.zaxxer/HikariCP {:mvn/version "5.1.0"}
  ;;SQL
  com.github.seancorfield/next.jdbc {:mvn/version "1.3.939"}
  com.github.seancorfield/honeysql {:mvn/version "2.6.1147"}
  ;; JSON
  cheshire/cheshire {:mvn/version "5.13.0"}
  ;; Crypto
  buddy/buddy-sign {:mvn/version "3.6.1-359"}
  ;; Exception handling
  fmnoise/flow {:mvn/version "4.2.2"}
  ;; async
  manifold/manifold {:mvn/version "0.4.3"}
  ;; Time
  clojure.java-time/clojure.java-time {:mvn/version "1.4.2"}
  ;; Testing
  com.hyperfiddle/rcf {:mvn/version "20220926-202227"}
  ring/ring-mock {:mvn/version "0.4.0"}
  ;; System
  aero/aero           {:mvn/version "1.1.6"}
  party.donut/system  {:mvn/version "1.0.254"}
  org.clojure/clojure {:mvn/version "1.11.4"}}
 ;; ---------------------------------------------------------

 ;; ---------------------------------------------------------
 :aliases
 {;; ------------
  ;; Clojure.main execution of application
  :run/service
  {:main-opts ["-m" "sanatoriocolegiales.lad-webhook.service"]}
  ;; ------------

  :dev {:extra-paths ["dev" "test"]
        :extra-deps {djblue/portal {:mvn/version "0.57.0"} 
                     clj-test-containers/clj-test-containers {:mvn/version "0.7.4"}
                     org.testcontainers/postgresql {:mvn/version "1.20.0"}
                     org.xerial/sqlite-jdbc {:mvn/version "3.46.0.0"}
                     com.github.flow-storm/clojure {:mvn/version "1.11.3-2"}
                     com.github.flow-storm/flow-storm-dbg {:mvn/version "3.17.1"}
                     org.clojure/test.check {:mvn/version "1.1.1"}}
        :classpath-overrides {org.clojure/clojure nil}
        :jvm-opts ["-Dclojure.storm.instrumentEnable=true"
                   "-Dclojure.storm.instrumentOnlyPrefixes=sanatoriocolegiales.lad-webhook."]}

  ;; Add libraries and paths to support additional test tools
  :test/env
  {}

  ;; Test runner - local and CI
  ;; call with :watch? true to start file watcher and re-run tests on saved changes
  :test/run
  {:extra-paths ["test"]
   :jvm-opts    ["-Dhyperfiddle.rcf.generate-tests=true"]
   :extra-deps  {ring/ring-mock {:mvn/version "0.4.0"}
                 lambdaisland/kaocha {:mvn/version "1.91.1392"}
                 com.hyperfiddle/rcf {:mvn/version "20220926-202227"}
                 clj-test-containers/clj-test-containers {:mvn/version "0.7.4"}
                 org.testcontainers/postgresql {:mvn/version "1.20.0"}
                 org.clojure/test.check {:mvn/version "1.1.1"}}
   :main-opts   ["-m" "kaocha.runner"]
   :exec-fn     kaocha.runner/exec-fn
   :exec-args   {:randomize? false
                 :fail-fast? true}}
  ;; ------------

  ;; ------------
  ;; tools.build `build.clj` built script
  :build/task
  {:replace-paths ["."]
   :replace-deps  {io.github.clojure/tools.build {:mvn/version "0.10.5"}}
   :ns-default    build}}}
  ;; ------------
 ;; ---------------------------------------------------------
